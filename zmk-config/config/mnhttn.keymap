#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "keys_de.h"

#define BASE 0
#define SYM  1
#define NAV  2
#define NUM  3
#define ADJ  4

&mt {
  quick-tap-ms = <200>;
  global-quick-tap;
  flavor = "balanced";
  tapping-term-ms = <120>;
};

/ {
    combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <100>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
            };
    };

    keymap {
        compatible = "zmk,keymap";
        base_layer {
            label= "BASE";
                bindings = <
                &kp Q           &kp W           &kp E           &kp R           &kp T                 &kp Z           &kp U           &kp I           &kp O           &kp P
                &mt LALT A      &mt LCTRL S     &mt LGUI D      &mt LSHFT F     &kp G                 &kp H           &mt RSHFT J     &mt RGUI K      &mt RCTRL L     &mt RALT DE_COLON
                &kp Y           &kp X           &kp C           &kp V           &kp B                 &kp N           &kp M           &kp DE_COMMA    &kp DE_DOT      &kp DE_MINUS
                                                &trans          &lt SYM SPACE   &lt NUM BSPC          &lt NAV TAB     &mt LSHFT RET   &trans
            >;
        };

        sim_layer {
            label= "SYM";
            bindings = <
                &kp DE_EXCL     &kp DE_AT       &kp DE_LBRC     &kp DE_RBRC     &kp DE_GRAVE          &kp DE_SQT      &kp DE_U_UMLAUT &kp DE_CARET    &kp DE_O_UMLAUT &kp DE_STAR
                &kp DE_A_UMLAUT &kp DE_SZ       &kp DE_LPAR     &kp DE_RPAR     &kp DE_PLUS           &kp DE_DQT      &kp DE_EQUAL    &kp DE_DLLR     &kp DE_POUND    &kp DE_SEMI
                &kp DE_PIPE     &kp DE_PRCNT    &kp DE_LBKT     &kp DE_RBKT     &kp DE_TILDE          &kp DE_AMPS     &kp DE_LT       &kp DE_GT       &kp DE_QMARK    &kp DE_UNDER
                                                &trans          &trans          &trans                &kp DE_SLASH    &kp RSHFT       &trans
            >;
        };

        nav_layer {
            label= "NAV";
	    bindings = <
                &kp ESC         &trans          &trans          &trans          &trans                &kp DEL         &kp PG_UP       &kp UP          &kp PG_DN       &kp INS
                &kp LALT        &kp LCTRL       &kp LGUI        &kp LSHFT       &trans                &kp HOME        &kp LEFT        &kp DOWN        &kp RIGHT       &kp END
                &trans          &trans          &trans          &trans          &trans                &trans          &trans          &trans          &trans          &trans
                                                &trans          &kp BSPC        &kp DEL               &trans          &trans          &to ADJ
            >;
        };

        num_layer {
            label= "NUM";
	    bindings = <
                &kp F1          &kp F2          &kp F3          &kp F4          &kp F5                &kp F6          &kp F7          &kp F8          &kp F9          &kp F10
                &kp N1          &kp N2          &kp N3          &kp N4          &kp N5                &kp N6          &kp N7          &kp N8          &kp N9          &kp N0
                &trans          &trans          &trans          &kp DE_COLON    &kp DE_DOT            &trans          &trans          &trans          &trans          &trans
                                                &to ADJ         &trans          &trans                &kp DE_BSLH     &trans          &trans
            >;
        };

        adjust_layer {
            label= "ADJ";
	    bindings = <
                &sys_reset      &bt BT_CLR      &out OUT_TOG    &trans          &trans                &trans          &trans          &out OUT_TOG    &bt BT_CLR      &sys_reset
                &bootloader     &bt BT_NXT      &trans          &trans          &trans                &trans          &trans          &trans          &bt BT_NXT      &bootloader
                &trans          &bt BT_PRV      &trans          &trans          &trans                &trans          &trans          &trans          &bt BT_PRV      &trans
                                                &trans          &trans          &trans                &trans          &trans          &trans
            >;
        };
    };
};
